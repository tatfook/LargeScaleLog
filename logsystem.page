<?npl
--[[
Title:
Author:
Date:
Desc: 
ajax:

]]
if(not is_admin()) then
  exit("access denied")
end

if(is_ajax()) then
	NPL.load("(gl)script/ide/Files.lua");
	NPL.load("(gl)script/ide/System/Database/TableDatabase.lua");
	
	local TableDatabase = commonlib.gettable("System.Database.TableDatabase");
	local params = request:getparams();
	
	add_action('wp_ajax_getWorkspaceDir', function()
		local workspaceDir = ParaIO.GetCurDirectory(0);
		wp_send_json(workspaceDir);
	end);
	local dateNum2Str = function(dateNum)
		local dateStr = os.date("%y-%m-%d %H:%M:%S",os.time())
		return dateStr
	end
	local dateStr2Num = function(dateStr)
		year="20"..string.sub(dateStr,1,2);
		month=string.sub(dateStr,4,5);
		day=string.sub(dateStr,7,8);
		hour=string.sub(dateStr,10,11);
		min=string.sub(dateStr,13,14);
		sec=string.sub(dateStr,16,17);
		local dateNum = os.time({year=tonumber(year), month=tonumber(month), day=tonumber(day), hour=tonumber(hour), min=tonumber(min), sec=tonumber(sec)});
		return dateNum;
	end
	local dateStrNum2Num = function(dateStrNum)
		year=string.sub(dateStrNum,1,4);
		month=string.sub(dateStrNum,5,6);
		day=string.sub(dateStrNum,7,8);
		hour=string.sub(dateStrNum,9,10);
		min=string.sub(dateStrNum,11,12);
		sec=string.sub(dateStrNum,13,14);
		local dateNum = os.time({year=tonumber(year), month=tonumber(month), day=tonumber(day), hour=tonumber(hour), min=tonumber(min), sec=tonumber(sec)});
		return dateNum;
	end
	
	add_action('wp_ajax_getTableRecord', function() 
		local dbPath = params.dbPath;
		local tableName = params.tableName;
		local page = params.page;
		local pageSize =  params.pageSize;
		
		if(not dbPath:match("[/\\]$")) then
			dbPath = dbPath .. "/";
		end
		local db_handle = TableDatabase:new():connect(dbPath, function() end);
		local skip = (page - 1) * pageSize;
		local sqlStr = "select count(*) as count from Collection;";
		local table = db_handle:collection(tableName);
		table:exec(sqlStr, function(err, data) resume(err, data) end);
		err, data = yield();
		local count = data[1].count;
		sqlStr = string.format("select * from Collection limit %d, %d;", skip, pageSize);
		table:exec(sqlStr, function(err, data) resume(err, data) end);
		err, data = yield();

		wp_send_json({total=count, table = data});
	end);
	add_action('wp_ajax_getResult', function()
		local dbPath = params.dbPath;
		local tableName = params.tableName;
		local page = params.page;
		local pageSize =  params.pageSize;
		local startDate = dateStrNum2Num(params.startDate);
		local endDate = dateStrNum2Num(params.endDate);
		
		
		if(not dbPath:match("[/\\]$")) then
			dbPath = dbPath .. "/";
		end
		local db_handle = TableDatabase:new():connect(dbPath, function() end);
		local skip = (page - 1) * pageSize;
		local sqlStr = "select count(*) as count from Collection;";
		local table = db_handle:collection(tableName);
		table:exec(sqlStr, function(err, data) resume(err, data) end);
		err, data = yield();
		local count = data[1].count;
		
		--db_handle:EnableSyncMode(true);
		table:find({}, function(err, rows) resume(err, rows) end);
		err, rows = yield();
		local data = {};
		for i,row in pairs(rows) do
			
			dateNum = dateStr2Num(row.time);
			if(dateNum>startDate and dateNum<endDate) then
				data[#data+1] = {_id = i, value = row};
			end
		end

		wp_send_json({total=#data, table = data, totalDataNum = count});
	end);
	return;
end
wp_enqueue_script("jqueryui", "/wp-includes/js/jquery/jquery-ui.min.js"); 
wp_enqueue_script("bootstrap", "/wp-includes/js/bootstrap/js/bootstrap.min.js");
wp_enqueue_script("angular", "/wp-includes/js/angular/angular.min.js");
wp_enqueue_script("angular-ui", "/wp-includes/js/angular/ui-bootstrap-tpls-1.3.3.min.js");
wp_enqueue_script("ngStorage", "/wp-includes/js/angular/ngStorage.js");
wp_enqueue_script("ace", "/wp-includes/js/ace/ace.js"); 
wp_enqueue_style("easyui", "/wp-includes/js/jeasyui/themes/default/easyui.css");
wp_enqueue_style("easyui_icon", "/wp-includes/js/jeasyui/themes/icon.css");
wp_enqueue_script("easyui", "/wp-includes/js/jeasyui/jquery.easyui.min.js");
PAGE_NO_SIDE_BAR = true;
?>
<script>
    var app = angular.module('LogSystem', ['ngStorage', 'ui.bootstrap'])
	.config(['$localStorageProvider', function ($localStorageProvider) {
        $localStorageProvider.setKeyPrefix('LogSystem');
    }]);
	app.controller('LogSystemController', function ($scope, $http, $localStorage, $location) {
		$scope.message = "message display";
		$scope.workspaceDir = "";
		$scope.relativeDir  = "";
		$scope.$storage = $localStorage.$default();
		
		
        $scope.tableRecord = [];
        $scope.pageSize = 10;//
        $scope.page = 1;//
        $scope.totalItems = 0;
        
		$scope.startDate = "";
		$scope.endDate = "";
		$scope.result = "";
		
		var urlPrefix =  '/ajax/logsystem?action=';
		
		$scope.getResult = function() {
			var relativeDir = $scope.relativeDir;
			var dbPath = relativeDir.substring(0,relativeDir.lastIndexOf("/"));
			var tableName = relativeDir.substring(relativeDir.lastIndexOf("/")+1,relativeDir.length-3);
			$scope.tableRecord = [];
            var params = {dbPath:dbPath, tableName:tableName, page:$scope.page, pageSize:$scope.pageSize, startDate:$scope.startDate, endDate:$scope.endDate}
			$http.post(urlPrefix+"getResult", params).then(function (response) {
                $scope.tableRecord = response.data.table;
				$scope.totalItems = response.data.total;
				$scope.totalDataNum = response.data.totalDataNum;
				console.log($scope.tableRecord[1]);
				$scope.result = "";
				$scope.result = $scope.result + "totla data:" + $scope.totalDataNum + "\n";
				$scope.result = $scope.result + "result data:" + $scope.totalItems + "\n";
            });
		};
		$scope.pageChanged = function() {
			$scope.getTableRecord();
        };
		$scope.getTableRecord = function () {
			var relativeDir = $scope.relativeDir;
			var dbPath = relativeDir.substring(0,relativeDir.lastIndexOf("/"));
			var tableName = relativeDir.substring(relativeDir.lastIndexOf("/")+1,relativeDir.length-3);
			//console.log(dbPath);
			//console.log(tableName);
			$scope.tableRecord = [];
            var params = {dbPath:dbPath, tableName:tableName, page:$scope.page, pageSize:$scope.pageSize}
            
			$http.post(urlPrefix+"getTableRecord", params).then(function (response) {
                $scope.tableRecord = response.data.table;
				$scope.totalItems = response.data.total;
				console.log($scope.tableRecord[1]);
				
            });
			//$scope.getIndexes();
			
        }
		
		$scope.getWorkspaceDir = function() {
			$http.post(urlPrefix+'getWorkspaceDir',{}).then(function (response) {
				$scope.workspaceDir = response.data;
			})
		};
		$scope.NavigateTreeViewTo = function (filename) {
			//$scope.message = $scope.message + filename;
            var tv = $('#filedir');
            if (filename == "" || filename == "/") {
                $scope.relativeDir = "";
                tv.treegrid("reload");
                return;
            }
            else if (!filename)
                filename = $scope.$storage.relativeDir;
			
            filename = filename.toLowerCase();
            filename = filename.replace(/\/$/, "");
            filename = filename.replace(/\//g, "#");
            
            function expandTo(children) {
                if (children) {
                    for (var i = 0; i < children.length; i++) {
                        var child = children[i];
                        if ((filename.length >= child.id.length ? filename.startsWith(child.id.toLowerCase()) : child.id.toLowerCase().startsWith(filename))) {
                            tv.treegrid("select", child.id);
                            if (child.state == "closed") {
                                tv.treegrid("expand", child.id);
                                window.setTimeout(function () {
                                    if (filename.length > child.id.length)
                                        expandTo(child.children);
                                }, 500);
                            }
                            if(filename.length > child.id.length)
                                expandTo(child.children);
                            return;
                        }
                    }
                }
            }
            expandTo(tv.treegrid("getRoots"));
        };
		$('#filedir').treegrid({
                onClickRow: function (row) {
                    var filename = row.id.replace(/#/g, "/");
                    if (/\.\w+$/.test(filename)) {
						$scope.relativeDir = filename;
						$scope.$apply();
						$scope.getTableRecord();
						//console.log(filename);
                    }
                    else {
                        if (row.state == "closed")
                            $('#filedir').treegrid("expand", row.id);
                        else if (row.state == "open")
                            $('#filedir').treegrid("collapse", row.id);
                    }
                }
        });
		
		$scope.$watch('relativeDir', function (newValue, oldValue) {
            if (newValue && newValue != "")
                $scope.NavigateTreeViewTo(newValue);
        });
		
		
	});
</script>

<div ng-app="LogSystem" ng-controller="LogSystemController" style="margin-top:10px;" class="form-horizontal">
    <div class="row">
		<div class="col-md-12">
			<p>{{message}}</p>
			<p ng-init="getWorkspaceDir()">work space:{{workspaceDir}}</p>
			<p>Current:</p>
			<form class="form-horizontal" role="form">
				<input type="text" placeholder="enter relative directory" style="width:100%" ng-model="relativeDir" />
			</form>
			
		</div>
        <div class="col-md-12">
			<div class="col-md-4">
				
				<table id="filedir" style="height:600px;width:100%;overflow: auto;" class="easyui-treegrid"
					   url="ajax/world?action=get_world_files&filter=*.db&rootdir="
					   idField="id" treeField="filename" remoteSort="false" singleSelect="true">
					<thead>
						<tr>
							<th field="filename" width="100%" sortable="true">Filename</th>
						</tr>
					</thead>
				</table>
			</div>
			<div class="col-md-8">
					<table class="table table-striped" style="word-wrap: break-word;table-layout: fixed;">
						<th class="col-md-2">id</th>
						<th class="col-md-10">NPL Data Table</th>
						
						<tr ng-repeat="obj in tableRecord">
							<td>{{obj.id}}</td>
							<td>{{obj.value}}</td>
							
						</tr>
					</table>
					<ul uib-pagination total-items="totalItems" ng-model="page" ng-change="pageChanged()" max-size="5" class="pagination-sm" boundary-links="true" items-per-page="pageSize"></ul>
            </div>
		</div>
	</div>
	<div class="col-md-12">
		<p>{{workspaceDir+relativeDir}}</p>
		<p>{{result}}</p>
		<form class="form-horizontal" role="form">
            <div class="col-md-1">
                <label class="control-label">Time:</label>
            </div>
			<div class="col-md-2">
                <input type="text" placeholder="enter start date" style="width:100%" ng-model="startDate" ng-init="startDate='20170827215411'"/>
			</div>
			<div class="col-md-2">
                <input type="text" placeholder="enter end date" style="width:100%" ng-model="endDate" ng-init="endDate='20170827215511'"/>
			</div>
			<div class="col-md-2">
				<button type="button" ng-click="getResult()">submit</button>
			</div>
        </form>
		
	</div>
</div>
